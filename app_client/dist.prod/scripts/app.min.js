!function(){"use strict";angular.module("meanApp",["ngMessages","ngSanitize","ngAnimate","ngTouch","ui.router","ui.bootstrap","ui.select","uiGmapgoogle-maps","contactsApp","flapperApp","loc8rApp"]).constant("MEANAPP_CONSTANTS",{templateUrls:{landingPagetemplate:"mean-app/common/landing-page.view.html",registerTemplate:"mean-app/common/register/register.view.html",loginTemplate:"mean-app/common/login/login.view.html"}}),angular.module("meanApp").config(["$stateProvider","$urlRouterProvider","MEANAPP_CONSTANTS",function(e,t,a){t.otherwise("/"),e.state("register",{url:"/register",templateUrl:a.templateUrls.registerTemplate,controller:"registerCtrl",controllerAs:"vm"}).state("login",{url:"/login",templateUrl:a.templateUrls.loginTemplate,controller:"loginCtrl",controllerAs:"vm"}).state("home",{url:"/",templateUrl:a.templateUrls.landingPagetemplate})}])}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/loc8r-app/common/directives/ratingStars/ratingStars.template.html","<span class=\"glyphicon glyphicon-star{{ thisRating<1 ? '-empty' : ''}}\"></span> <span class=\"glyphicon glyphicon-star{{ thisRating<2 ? '-empty' : ''}}\"></span> <span class=\"glyphicon glyphicon-star{{ thisRating<3 ? '-empty' : ''}}\"></span> <span class=\"glyphicon glyphicon-star{{ thisRating<4 ? '-empty' : ''}}\"></span> <span class=\"glyphicon glyphicon-star{{ thisRating<5 ? '-empty' : ''}}\"></span>")}]),function(){"use strict";angular.module("meanApp").config(["$stateProvider","$urlRouterProvider","LOC8R_CONSTANTS",function(e,t,a){t.when("/loc8r","/loc8r/home"),e.state("loc8r",{url:"/loc8r",templateUrl:a.loc8rViews.loc8rIndexTemplate}).state("loc8r.home",{url:"/home",templateUrl:a.loc8rViews.loc8rHomeTemplate,controller:"homeCtrl",controllerAs:"vm"}).state("loc8r.about",{url:"/about",templateUrl:a.loc8rViews.loc8rAboutTemplate,controller:"aboutCtrl",controllerAs:"vm"}).state("loc8r.location",{url:"/location/:locationid",templateUrl:a.loc8rViews.loc8rLocationDetailTemplate,controller:"locationDetailCtrl",controllerAs:"vm"})}])}(),function(){"use strict";angular.module("loc8rApp",[]),angular.module("loc8rApp").constant("LOC8R_CONSTANTS",{loc8rViews:{loc8rIndexTemplate:"mean-app/loc8r-app/loc8r-index.html",loc8rHomeTemplate:"mean-app/loc8r-app/home/home.view.html",loc8rAboutTemplate:"mean-app/loc8r-app/about/about.view.html",loc8rLocationDetailTemplate:"mean-app/loc8r-app/locationDetail/locationDetail.view.html",loc8rFooterGenericTemplate:"mean-app/loc8r-app/common/directives/footerGeneric/footerGeneric.template.html",loc8rNavigationTemplate:"mean-app/loc8r-app/common/directives/navigation/navigation.template.html",loc8rHeaderTemplate:"mean-app/loc8r-app/common/directives/pageHeader/pageHeader.template.html",loc8rRatingStarsTemplate:"mean-app/loc8r-app/common/directives/ratingStars/ratingStars.template.html"}})}(),function(){function e(e){return{restrict:"EA",scope:{thisRating:"=rating"},templateUrl:e.loc8rViews.loc8rRatingStarsTemplate}}e.$inject=["LOC8R_CONSTANTS"],angular.module("loc8rApp").directive("ratingStars",e)}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/loc8r-app/common/directives/navigation/navigation.template.html",'<nav class="navbar navbar-default navbar-fixed-top"><div class="container"><div class="navbar-header"><button type="button" class="navbar-toggle" ng-click="navCollapsed = !navCollapsed"><span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button> <a ui-sref="loc8r.home" class="navbar-brand">Loc8r</a></div><div class="collapse navbar-collapse" uib-collapse="!navCollapsed"><ul class="nav navbar-nav"><li><a ui-sref="loc8r.about">About</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-hide="navvm.isLoggedIn"><a ui-sref="login">Sign in</a></li><li ng-show="navvm.isLoggedIn" uib-dropdown><a href="" uib-dropdown-toggle>{{ navvm.currentUser.name }} <span class="caret"></span></a><ul uib-dropdown-menu role="menu"><li><a href="" ng-click="navvm.logout()">Logout</a></li></ul></li></ul></div></div></nav>')}]),function(){function e(e){return{restrict:"EA",templateUrl:e.loc8rViews.loc8rNavigationTemplate,controller:"navigationCtrl as navvm"}}e.$inject=["LOC8R_CONSTANTS"],angular.module("loc8rApp").directive("navigation",e)}(),function(){function e(e,t,a){var n=this;n.currentPath=e.path(),n.isLoggedIn=t.isLoggedIn(),n.currentUser=t.currentUser(),n.logout=function(){t.logout(),e.path("/"),a.reload()}}angular.module("loc8rApp").controller("navigationCtrl",e),e.$inject=["$location","authentication","$state"]}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/loc8r-app/common/directives/pageHeader/pageHeader.template.html",'<div id="banner" class="page-header"><div class="row"><div class="col-lg-6"></div><h1>{{ content.title }} <small>{{ content.strapline }}</small></h1></div></div>')}]),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/loc8r-app/common/directives/footerGeneric/footerGeneric.template.html",'<footer><div class="row"><div class="col-xs-12"><small>&copy; Divy Mittal 2016</small></div></div></footer>')}]),function(){function e(e){return{restrict:"EA",scope:{content:"=content"},templateUrl:e.loc8rViews.loc8rHeaderTemplate}}e.$inject=["LOC8R_CONSTANTS"],angular.module("loc8rApp").directive("pageHeader",e)}(),function(){function e(e){return{restrict:"EA",templateUrl:e.loc8rViews.loc8rFooterGenericTemplate}}e.$inject=["LOC8R_CONSTANTS"],angular.module("loc8rApp").directive("footerGeneric",e)}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/loc8r-app/reviewModal/reviewModal.view.html",'<div class="modal-content"><form id="addReview" name="addReview" role="form" ng-submit="vm.onSubmit()" class="form-horizontal"><div class="modal-header"><button type="button" ng-click="vm.modal.cancel()" class="close"><span aria-hidden="true">Ã—</span> <span class="sr-only">Close</span></button><h4 id="myModalLabel" class="modal-title">Add your review for {{ vm.locationData.locationName }}</h4></div><div class="modal-body"><div role="alert" ng-show="vm.formError" class="alert alert-danger">{{ vm.formError }}</div><div class="form-group"><label for="rating" class="col-xs-10 col-sm-2 control-label">Rating</label><div class="col-xs-12 col-sm-2"><select id="rating" name="rating" ng-model="vm.formData.rating" class="form-control input-sm"><option>5</option><option>4</option><option>3</option><option>2</option><option>1</option></select></div></div><div class="form-group"><label for="review" class="col-sm-2 control-label">Review</label><div class="col-sm-10"><textarea id="review" name="review" rows="5" required="required" ng-model="vm.formData.reviewText" class="form-control"></textarea></div></div></div><div class="modal-footer"><button ng-click="vm.modal.cancel()" type="button" class="btn btn-default">Cancel</button> <button type="submit" class="btn btn-primary">Submit review</button></div></form></div>')}]),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/loc8r-app/locationDetail/locationDetail.view.html",'<navigation></navigation><div class="container"><page-header content="vm.pageHeader"></page-header><div class="row"><div class="col-xs-12 col-md-9"><div class="row"><div class="col-xs-12 col-sm-6"><p class="rating" rating-stars rating="vm.data.location.rating"></p><p>{{ vm.data.location.address }}</p><div class="panel panel-primary"><div class="panel-heading"><h2 class="panel-title">Opening hours</h2></div><div class="panel-body"><p ng-repeat="time in vm.data.location.openingTimes" ng-switch on="time.closed">{{ time.days }} : <span class="opening-time" ng-switch-when="true">closed</span> <span class="opening-time" ng-switch-default>{{ time.opening + " - " + time.closing }}</span></p></div></div><div class="panel panel-primary"><div class="panel-heading"><h2 class="panel-title">Facilities</h2></div><div class="panel-body"><span class="label label-warning label-facility" ng-repeat="facility in vm.data.location.facilities"><span class="glyphicon glyphicon-ok"></span> {{ facility }}</span></div></div></div><div class="col-xs-12 col-sm-6 location-map"><div class="panel panel-primary"><div class="panel-heading"><h2 class="panel-title">Location map</h2></div><div class="panel-body"><img src="http://maps.googleapis.com/maps/api/staticmap?center={{ vm.data.location.coords[1] }},{{ vm.data.location.coords[0] }}&amp;zoom=17&amp;size=400x350&amp;sensor=false&amp;markers={{ vm.data.location.coords[1] }},{{ vm.data.location.coords[0] }}&amp;scale=2" class="img-responsive img-rounded"></div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-primary review-panel"><div class="panel-heading"><a ng-show="vm.isLoggedIn" ng-click="vm.popupReviewForm()" class="btn btn-default pull-right">Add review</a> <a ng-hide="vm.isLoggedIn" ui-sref="login" class="btn btn-default pull-right">Login to add review</a><h2 class="panel-title">Customer reviews</h2></div><div class="panel-body review-container"><div class="row"><div class="review" ng-repeat="review in vm.data.location.reviews | orderBy:\'createdOn\':true"><div class="well well-sm review-header"><span class="rating" rating-stars rating="review.rating"></span> <span class="reviewAuthor">{{ review.author }}</span> <small class="reviewTimestamp">{{ review.createdOn | date : \'d MMMM yyyy\' }}</small></div><div class="col-xs-12"><p ng-bind-html="review.reviewText | addHtmlLineBreaks"></p></div></div></div></div></div></div></div></div><div class="col-xs-12 col-md-3"><p class="lead">{{ vm.data.location.name }} is on Loc8r because it has accessible wifi and space to sit down with your laptop and get some work done.</p><p>If you\'ve been and you like it - or if you don\'t - please leave a review to help other people just like you.</p></div></div><footer-generic></footer-generic></div>')}]),function(){function e(e,t){var a=function(a,n,o){return e.get("/api/loc8r/locations",{params:{lat:a,lng:n,maxDistance:o||10},headers:{Authorization:"Bearer "+t.getToken()}})},n=function(a){return e.get("/api/loc8r/locations/"+a,{headers:{Authorization:"Bearer "+t.getToken()}})},o=function(a,n){return e.post("/api/loc8r/locations/"+a+"/reviews",n,{headers:{Authorization:"Bearer "+t.getToken()}})},l=function(a){return e({method:"POST",url:"/api/loc8r/locations",data:a,headers:{Authorization:"Bearer "+t.getToken()}})};return{createLocation:l,locationByCoords:a,locationById:n,addReviewById:o}}e.$inject=["$http","authentication"],angular.module("loc8rApp").service("loc8rData",e)}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/loc8r-app/home/home.view.html",'<navigation></navigation><div class="container"><page-header content="vm.pageHeader"></page-header><div class="row"><div class="col-xs-12 col-sm-8"><label for="proximity">Proximity</label><input id="proximity" type="number" name="proximity" ng-model="vm.proximity" placeholder="specify proximity in kms"> <span ng-show="vm.proximity">kms</span> <a class="pull-right" style="font-size: 30px"><span class="glyphicon glyphicon-search" ng-click="vm.loadLocations()"></span></a><hr></div></div><div class="row"><div class="col-xs-12 col-sm-8"><label for="filter">Filter results</label><input id="filter" type="text" name="filter" ng-model="textFilter"> <a class="pull-right" title="add new location" style="font-size: 30px"><span class="glyphicon glyphicon-plus-sign" ng-click="vm.addNewLocationForm()"></span></a><div class="error">{{ vm.message }}</div><hr><div class="row list-group"><div class="col-xs-12 list-group-item" ng-repeat="location in vm.data.locations | filter : textFilter"><h4><a ui-sref="loc8r.location({ locationid: location._id })">{{ location.name }}</a> <small class="rating-stars" rating-stars rating="location.rating"></small> <span class="badge pull-right badge-default">{{ location.distance | formatDistance }}</span></h4><p class="address">{{ location.address }}</p><p><span class="label label-warning label-facility" ng-repeat="facility in location.facilities">{{ facility }}</span></p></div></div></div><div class="col-xs-12 col-sm-4"><p class="lead">{{ vm.sidebar.content }}</p></div></div><footer-generic></footer-generic></div><script type="text/ng-template" id="addNewLocationModal"><form name="vm.addLocationForm" role="form" class="form-horizontal form-validation">\n    <div class="modal-header">\n      <h3 class="modal-title">Add a Location @ [\n        <small>\n          <mark>{{vm.marker.coords.latitude}}</mark>,\n          <mark>{{vm.marker.coords.longitude}}</mark>\n        </small>]\n      </h3>\n      <hr/>\n      <ui-gmap-google-map center=\'vm.map.center\' zoom=\'vm.map.zoom\' options="" events="vm.clickMap($event)">\n        <ui-gmap-marker coords="vm.marker.coords" options="vm.marker.options" idkey="vm.marker.id">\n        </ui-gmap-marker>\n      </ui-gmap-google-map>\n    </div>\n    <div class="modal-body">\n      <div role="alert" ng-show="vm.formError" class="alert alert-danger">{{ vm.formError }}</div>\n      <div class="form-group">\n        <label for="name" class="col-sm-2 control-label">Name</label>\n        <div class="col-sm-10">\n          <input type="text" name="name" id="name" class="form-control" placeholder="Enter the name for location" ng-model="vm.newLocation.name" required>\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="address" class="col-sm-2 control-label">Address</label>\n        <div class="col-sm-10">\n          <textarea id="address" name="address" ng-model="vm.newLocation.address" class="form-control"></textarea>\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="facilities" class="col-sm-2 control-label">Facilities</label>\n        <div class="col-sm-10">\n          <ui-select multiple tagging tagging-label="(as a facility)" ng-model="vm.newLocation.facilities" title="Enter the facilities">\n            <ui-select-match placeholder="Select facilities...">{{$item}}</ui-select-match>\n            <ui-select-choices repeat="faclty in vm.ALL_FACILITIES | filter:$select.search">\n              {{faclty}}\n            </ui-select-choices>\n          </ui-select>\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="openingTimes" class="col-sm-2 control-label">Select Days</label>\n        <div class="col-sm-10">\n          <ui-select multiple tagging="vm.tagTransform" ng-model="vm.newLocation.openingTimes" title="Choose days">\n            <ui-select-match placeholder="Select day...">{{$item.days}}</ui-select-match>\n            <ui-select-choices repeat="eachDay in vm.WEEKDAYS | filter: $select.search">\n              {{eachDay.days}}\n            </ui-select-choices>\n          </ui-select>\n        </div>\n      </div>\n      <div class="form-group" ng-show="vm.newLocation.openingTimes.length">\n        <div class="col-sm-4 col-sm-offset-2">\n          <ul class="list-group">\n            <li ng-repeat="eachDay in vm.newLocation.openingTimes" class="list-group-item list-group-item{{eachDay.closed ? \'-danger\' : \'-success\'}}" ng-click="vm.editTiming(eachDay)">\n              <span class="badge" ng-hide="eachDay.closed">\n                {{eachDay.opening | date:\'shortTime\' }} - {{eachDay.closing | date:\'shortTime\' }}\n              </span>\n              {{eachDay.days}}\n            </li>\n          </ul>\n        </div>\n        <div class="col-sm-6" ng-show="vm.editDay">\n          <div class="col-sm-12 text-center form-group">\n            {{vm.editDay.days}}\n            <button type="button" class="btn btn-xs btn{{vm.editDay.closed ? \'-danger\' : \'-success\'}}" ng-model="vm.editDay.closed" uib-btn-checkbox>\n              {{vm.editDay.closed ? \'CLOSED\' : \'OPEN\'}}\n            </button>\n          </div>\n          <div class="form-group col-xs-6" ng-hide="vm.editDay.closed">\n            <div uib-timepicker ng-model="vm.editDay.opening"></div>\n          </div>\n          <div class="form-group col-xs-6 pull-right" ng-hide="vm.editDay.closed">\n            <div uib-timepicker ng-model="vm.editDay.closing"></div>\n          </div>\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="rating" class="col-xs-10 col-sm-2 control-label">Rating</label>\n        <div class="col-xs-12 col-sm-3">\n          <label style="font-size:20px; padding-top: 3px;">\n            <span uib-rating ng-model="vm.newLocation.rating" max="5" class="uib-rating"></span>\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button class="btn btn-primary" type="button" ng-disabled="vm.addLocationForm.$invalid" ng-click="vm.addLocation(vm.newLocation)">Add</button>\n      <button class="btn btn-warning" type="button" ng-click="vm.modal.cancel()">Cancel</button>\n    </div>\n  </form></script>')}]),function(){function e(){var e=function(e,t,a){navigator.geolocation?navigator.geolocation.getCurrentPosition(e,t):a()};return{getPosition:e}}angular.module("loc8rApp").service("geolocation",e)}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/loc8r-app/about/about.view.html",'<navigation></navigation><div class="container"><page-header content="vm.pageHeader"></page-header><div class="row"><div class="col-md-6 col-sm-12"><p ng-bind-html="vm.main.content | addHtmlLineBreaks"></p></div></div><footer-generic></footer-generic></div>')}]),function(){function e(){return function(e){var a,n;return e&&t(e)?(e>1e3?(a=parseFloat(e/1e3).toFixed(2),n=" km"):(a=parseInt(e),n=" m"),a+n):"?"}}var t=function(e){return!isNaN(parseFloat(e))&&isFinite(e)};angular.module("loc8rApp").filter("formatDistance",e)}(),function(){function e(){return function(e){var t=e.replace(/\n/g,"<br/>");return t}}angular.module("loc8rApp").filter("addHtmlLineBreaks",e)}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/common/register/register.view.html",'<navigation></navigation><div class="container"><page-header content="vm.pageHeader"></page-header><div class="row"><div class="col-md-6 col-sm-12"><p class="lead">Already a member? Please <a ui-sref="login">log in</a> instead.</p><form ng-submit="vm.onSubmit()"><div role="alert" ng-show="vm.formError" class="alert alert-danger">{{ vm.formError }}</div><div class="form-group"><label for="name">Full name</label><input type="text" class="form-control" id="name" placeholder="Enter your name" ng-model="vm.credentials.name"></div><div class="form-group"><label for="email">Email address</label><input type="email" class="form-control" id="email" placeholder="Enter email" ng-model="vm.credentials.email"></div><div class="form-group"><label for="password">Password</label><input type="password" class="form-control" id="password" placeholder="Password" ng-model="vm.credentials.password"></div><button type="submit" class="btn btn-default">Register!</button></form></div></div><footer-generic></footer-generic></div>')}]),function(){function e(e,t,a){var n=this;n.locationData=a,n.onSubmit=function(){return n.formError="",n.formData.rating&&n.formData.reviewText?void n.doAddReview(n.locationData.locationid,n.formData):(n.formError="All fields required, please try again",!1)},n.doAddReview=function(e,a){return t.addReviewById(e,{rating:a.rating,reviewText:a.reviewText}).success(function(e){n.modal.close(e)}).error(function(e){n.formError="Your review has not been saved, please try again"}),!1},n.modal={close:function(t){e.close(t)},cancel:function(){e.dismiss("cancel")}}}angular.module("loc8rApp").controller("reviewModalCtrl",e),e.$inject=["$uibModalInstance","loc8rData","locationData"]}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/common/login/login.view.html",'<navigation></navigation><div class="container"><page-header content="vm.pageHeader"></page-header><div class="row"><div class="col-md-6 col-sm-8"><p class="lead">Not a member? Please <a ui-sref="register">register</a> first.</p><form ng-submit="vm.onSubmit()"><div role="alert" ng-show="vm.formError" class="alert alert-danger">{{ vm.formError }}</div><div class="form-group"><label for="email">Email address</label><input type="email" class="form-control" id="email" placeholder="Enter email" ng-model="vm.credentials.email"></div><div class="form-group"><label for="password">Password</label><input type="password" class="form-control" id="password" placeholder="Password" ng-model="vm.credentials.password"></div><button type="submit" class="btn btn-default">Sign in!</button></form></div></div><footer-generic></footer-generic></div>')}]),function(){function e(e,t,a,n,o){var l=this;l.locationid=e.locationid,l.isLoggedIn=o.isLoggedIn(),l.currentPath=t.path(),n.locationById(l.locationid).success(function(e){l.data={location:e},l.pageHeader={title:l.data.location.name}}).error(function(e){console.log(e)}),l.popupReviewForm=function(){var e=a.open({templateUrl:"/reviewModal/reviewModal.view.html",controller:"reviewModalCtrl as vm",resolve:{locationData:function(){return{locationid:l.locationid,locationName:l.data.location.name}}}});e.result.then(function(e){l.data.location.reviews.push(e)})}}angular.module("loc8rApp").controller("locationDetailCtrl",e),e.$inject=["$stateParams","$location","$uibModal","loc8rData","authentication"]}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/loc8r-app/loc8r-index.html",'<link href="https://fonts.googleapis.com/css?family=Lobster|Cabin:400,700" rel="stylesheet" type="text/css"><div id="loc8r-view"><div ui-view></div></div>')}]),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/flapper-app/flapper-posts.html",'<div class="page-header"><h3><a ng-show="post.link" href="{{post.link}}">{{post.title}} </a><span ng-hide="post.link">{{post.title}}</span></h3></div><div ng-repeat="comment in post.comments | orderBy: \'-votes\'"><span class="glyphicon glyphicon-thumbs-up" ng-click="upvote(comment)"></span> {{comment.votes}} <span class="glyphicon glyphicon-thumbs-down" ng-click="downvote(comment)"></span> - by {{comment.author}} <span style="font-size:20px;margin-left:10px">{{comment.body}}</span></div><form ng-submit="addComment()" style="margin-top:30px"><h3>Add a new comment</h3><div class="form-group"><input type="text" class="form-control" placeholder="Comment" ng-model="body"></div><button type="submit" class="btn btn-primary">Post to {{post.title}}</button></form>')}]),function(){function e(e,t,a,n){var o=this;o.pageHeader={title:"Loc8r",strapline:"Find places to work with wifi near you!"},o.sidebar={content:"Looking for wifi and a seat? Loc8r helps you find places to work when out and about. Perhaps with coffee, cake or a pint? Let Loc8r help you find the place you're looking for."},o.message="Checking your location",o.proximity=5,o.position={},o.getData=function(e){o.position={lat:e.coords.latitude,lng:e.coords.longitude},o.message="Searching for nearby places within "+o.proximity+" kilometres",t.locationByCoords(o.position.lat,o.position.lng,o.proximity).success(function(e){o.message=e.length>0?"":"No locations found nearby",o.data={locations:e}}).error(function(e){o.message="Sorry, something's gone wrong, please try again later"})},o.showError=function(t){e.$apply(function(){o.message=t.message})},o.noGeo=function(){e.$apply(function(){o.message="Geolocation is not supported by this browser."})},o.loadLocations=function(){a.getPosition(o.getData,o.showError,o.noGeo)},o.addNewLocationForm=function(){n.open({templateUrl:"addNewLocationModal",controller:"addNewLocationModalCtrl as vm",size:"lg",backdrop:"static",windowClass:"add-location-modal",resolve:{currentCoordinates:function(){return{latitude:o.position.lat,longitude:o.position.lng}}}}).result.then(function(e){o.data.locations.push(e),o.loadLocations()})},a.getPosition(o.getData,o.showError,o.noGeo)}e.$inject=["$scope","loc8rData","geolocation","$uibModal"],angular.module("loc8rApp").controller("homeCtrl",e)}(),function(){angular.module("loc8rApp").controller("addNewLocationModalCtrl",["$uibModalInstance","$filter","$locale","$scope","currentCoordinates","loc8rData",function(e,t,a,n,o,l){console.log(o);var i=this;i.map={center:o,zoom:17},i.marker={id:0,coords:o,options:{draggable:!0,labelAnchor:"100 0",labelClass:"marker-labels"}},i.modal={close:function(t){e.close(t)},cancel:function(){e.dismiss("cancel")}},i.ALL_FACILITIES=[],i.WEEKDAYS=a.DATETIME_FORMATS.DAY,i.WEEKDAYS.unshift("Monday - Friday"),i.WEEKDAYS=i.WEEKDAYS.map(function(e){return{days:e,opening:"",closing:"",closed:!0}}),i.newLocation={coords:i.marker.coords,openingTimes:[]},i.tagTransform=function(e){return{days:e,opening:"",closing:"",closed:!0}},i.editTiming=function(e){i.editDay=e},n.$watchCollection(function(){return i.newLocation.openingTimes},function(e,t,a){e.length?i.editDay=e[e.length-1]:i.editDay={}}),i.addLocation=function(){if(i.formError="",!i.addLocationForm.$invalid){var e=angular.copy(i.newLocation);e.coords={lat:e.coords.latitude,lng:e.coords.longitude},e.openingTimes=e.openingTimes.map(function(e){return e.closed?{days:e.days,closed:e.closed}:{days:e.days,opening:t("date")(e.opening,"shortTime"),closing:t("date")(e.closing,"shortTime"),closed:e.closed}}),l.createLocation(e).success(function(e){i.modal.close(e)}).error(function(e){i.formError="Your location has not been saved, please try again"})}}}])}(),function(){function e(){var e=this;e.pageHeader={title:"About Loc8r"},e.main={content:"Loc8r was created to help people find places to sit down and get a bit of work done.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sed lorem ac nisi dignissim accumsan. Nullam sit amet interdum magna. Morbi quis faucibus nisi. Vestibulum mollis purus quis eros adipiscing tristique. Proin posuere semper tellus, id placerat augue dapibus ornare. Aenean leo metus, tempus in nisl eget, accumsan interdum dui. Pellentesque sollicitudin volutpat ullamcorper.\n\nSuspendisse tincidunt, lectus non suscipit pharetra, purus ipsum vehicula sapien, a volutpat mauris ligula vel dui. Proin varius interdum elit, eu porttitor quam consequat et. Quisque vitae felis sed ante fringilla fermentum in vitae sem. Quisque fermentum metus at neque sagittis imperdiet. Phasellus non laoreet massa, eu laoreet nibh. Pellentesque vel magna vulputate, porta augue vel, dapibus nisl. Phasellus aliquet nibh nec nunc posuere fringilla. Quisque sit amet dignissim erat. Nulla facilisi. Donec in sollicitudin ante. Cras rhoncus accumsan rutrum. Sed aliquet ligula dui, eget laoreet turpis tempor vitae."}}angular.module("loc8rApp").controller("aboutCtrl",e)}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/flapper-app/flapper-home.html",'<div class="page-header"><h1>Flapper News <a class="pull-right"><span class="glyphicon glyphicon-plus-sign" ng-click="addForm=true"></span></a></h1></div><div ng-repeat="post in posts | orderBy: \'-votes\'"><span class="glyphicon glyphicon-thumbs-up" ng-click="upvote(post)"></span> {{post.votes}} <span class="glyphicon glyphicon-thumbs-down" ng-click="downvote(post)"></span> <span style="font-size:20px;margin-left:10px"><a ng-show="post.link" ng-href="{{post.link}}" target="_self">{{post.title}} </a><span ng-show="post.author">posted by <a>{{post.author}}</a> | </span><span ng-hide="post.link">{{post.title}} </span></span><span><a ui-sref="flapper.post({id: post._id})">Comments</a> ({{post.comments.length}})</span></div><form ng-submit="addPost()" ng-show="addForm" style="margin-top:30px"><h3>Add a new post:</h3><div class="form-group"><input type="text" class="form-control" placeholder="Title" ng-model="title"></div><div class="form-group"><input type="text" class="form-control" placeholder="Link" ng-model="link"></div><button type="submit" class="btn btn-primary">Post</button></form>')}]),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/flapper-app/flapper-app-index.html",'<style>.glyphicon-thumbs-up {\n    cursor: pointer\n}</style><nav class="navbar navbar-default" ng-controller="FlapperNavController"><ul class="nav navbar-nav"><li style="border: 1px double; padding: 0px 5px" class="text-primary"><a ui-sref="home"><span class="glyphicon glyphicon-home text-primary" aria-hidden="true"></span></a></li></ul><ul class="nav navbar-nav pull-right"><li ng-show="isLoggedIn()"><a>{{ currentUser().name }}</a></li><li ng-show="isLoggedIn()"><a href="" ng-click="logOut()">Log Out</a></li><li ng-hide="isLoggedIn()"><a ui-sref="login">Log In</a></li><li ng-hide="isLoggedIn()"><a ui-sref="register">Register</a></li></ul></nav><div class="container"><ui-view></ui-view></div>')}]),function(){function e(e,t,a){var n=this;n.pageHeader={title:"Create a new account"},n.credentials={name:"",email:"",password:""},n.returnPage=a.page||"/",n.onSubmit=function(){return n.formError="",n.credentials.name&&n.credentials.email&&n.credentials.password?void n.doRegister():(n.formError="All fields required, please try again",!1)},n.doRegister=function(){n.formError="",t.register(n.credentials).error(function(e){n.formError=e}).then(function(){e.path(n.returnPage)})}}angular.module("meanApp").controller("registerCtrl",e),e.$inject=["$location","authentication","$stateParams"]}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/contacts-app/contacts-app-index.html",'<div style="min-height: 2000px; padding-top: 70px"><header ng-include="headerTemplate"></header><div class="container" ui-view></div></div>')}]),function(){function e(e,t,a){var n=this;n.pageHeader={title:"Sign in"},n.credentials={email:"",password:""},n.returnPage=a.page||"/",n.onSubmit=function(){return n.formError="",n.credentials.email&&n.credentials.password?void n.doLogin():(n.formError="All fields required, please try again",!1)},n.doLogin=function(){n.formError="",t.login(n.credentials).error(function(e){n.formError=e}).then(function(){e.path(n.returnPage)})}}angular.module("meanApp").controller("loginCtrl",e),e.$inject=["$location","authentication","$stateParams"]}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/contacts-app/contacts-app-header.html",'<nav class="navbar navbar-inverse navbar-fixed-top"><div class="container"><div class="navbar-header"><button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button> <a class="navbar-brand" ui-sref="contacts.list"><img alt="mLab Contact List" ng-src="{{logoImg}}" style="width: 60px; height: 25px"></a></div><div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1"><ul class="nav navbar-nav pull-right"><li class="active"><a ui-sref="home"><span class="glyphicon glyphicon-home text-primary" aria-hidden="true"></span></a></li></ul></div></div></nav>')}]),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/contacts-app/contact-list.html",'<div class="row"><div class="col-md-6"><h2>Contacts</h2></div><div class="col-md-3"></div><div class="col-md-2"><a style="margin-top:20px" class="btn btn-default" ui-sref="contacts.new">New</a></div><div class="col-md-1"></div></div><div class="container"><table class="table table-hover"><tbody><tr ng-repeat="contact in contacts | orderBy:\'lastName\'" style="cursor:pointer"><td><a ui-sref="contacts.edit({id:contact._id})">{{ contact.firstName }} {{ contact.lastName }}</a></td></tr></tbody></table></div>')}]),function(){"use strict";angular.module("meanApp").config(["$stateProvider","$urlRouterProvider","FLAPPER_CONSTANTS",function(e,t,a){t.when("/flapper","/flapper/home"),e.state("flapper",{url:"/flapper",templateUrl:a.templates.flapperIndexTemplate}).state("flapper.home",{url:"/home",templateUrl:a.templates.homeTemplate,controller:"FlapperMainController",resolve:{
resolvedPosts:["PostService",function(e){return e.getAll()}]}}).state("flapper.post",{url:"/posts/{id}",templateUrl:a.templates.postsTemplate,controller:"FlapperPostsController",resolve:{resolvedPost:["$stateParams","PostService",function(e,t){return t.get(e.id)}]}})}]),angular.module("flapperApp",[]).constant("FLAPPER_CONSTANTS",{api_url:"/api/flapper/",templates:{flapperIndexTemplate:"mean-app/flapper-app/flapper-app-index.html",homeTemplate:"mean-app/flapper-app/flapper-home.html",postsTemplate:"mean-app/flapper-app/flapper-posts.html"}}).factory("PostService",["$http","authentication","FLAPPER_CONSTANTS",function(e,t,a){var n={postCollection:[]};return n.getAll=function(){return e.get(a.api_url+"posts").success(function(e){angular.copy(e,n.postCollection)})},n.create=function(o){return e.post(a.api_url+"posts",o,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){n.postCollection.push(e)})},n.upvote=function(n){return e.put(a.api_url+"posts/"+n._id+"/upvote",null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){n.votes+=1})},n.downvote=function(t){return e.put(a.api_url+"posts/"+t._id+"/downvote").success(function(e){t.votes-=1})},n.get=function(t){return e.get(a.api_url+"posts/"+t).then(function(e){return e.data})},n.addComment=function(n,o){return e.post(a.api_url+"posts/"+n+"/comments",o,{headers:{Authorization:"Bearer "+t.getToken()}})},n.upvoteComment=function(n,o){return e.put(a.api_url+"posts/"+n._id+"/comments/"+o._id+"/upvote",null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){o.votes+=1})},n.downvoteComment=function(t,n){return e.put(a.api_url+"posts/"+t._id+"/comments/"+n._id+"/downvote").success(function(e){n.votes-=1})},n}]).controller("FlapperNavController",["$scope","authentication",function(e,t){e.isLoggedIn=t.isLoggedIn,e.currentUser=t.currentUser,e.logOut=t.logOut}]).controller("FlapperMainController",["$scope","resolvedPosts","PostService","authentication",function(e,t,a,n){e.isLoggedIn=n.isLoggedIn,e.test="Hello world!",e.posts=t.data,e.addPost=function(){if(0===e.title.length)return void alert("Title is required!");var t=/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.â€‹\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[â€‹6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1â€‹,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00â€‹a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\uâ€‹00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/i,n=e.link;return e.link&&!t.test(n)?void alert("You must include a full valid url! (ex: http://www.example.com)"):(a.create({title:e.title,link:e.link})["finally"](function(){e.posts=a.postCollection}),e.title="",void(e.link=""))},e.upvote=function(e){a.upvote(e)},e.downvote=function(e){a.downvote(e)}}]).controller("FlapperPostsController",["$scope","$stateParams","PostService","resolvedPost","authentication",function(e,t,a,n,o){e.isLoggedIn=o.isLoggedIn,e.post=n,e.addComment=function(){""!==e.body&&(a.addComment(n._id,{body:e.body,author:"user"}).success(function(t){e.post.comments.push(t)}),e.body="")},e.upvote=function(e){a.upvoteComment(n,e)},e.downvote=function(e){a.downvoteComment(n,e)}}])}(),function(){"use strict";angular.module("meanApp").config(["$stateProvider","$urlRouterProvider","CONTACTS_CONSTANTS",function(e,t,a){t.when("/contacts","/contacts/list"),e.state("contacts",{url:"/contacts",templateUrl:a.templates.contactsIndexTemplate,controller:["$scope","CONTACTS_CONSTANTS",function(e,t){e.headerTemplate=t.templates.contactsHeaderTemplate,e.logoImg=t.imgUrl.contactLogo}]}).state("contacts.list",{url:"/list",templateUrl:a.templates.contactListTemplate,controller:"ContactsListController",resolve:{resolvedContacts:["ContactsService",function(e){return e.getContacts()}]}}).state("contacts.new",{url:"/new",templateUrl:a.templates.contactFormTemplate,controller:"NewContactController"}).state("contacts.edit",{url:"/:id",templateUrl:a.templates.contactInfoTemplate,controller:"EditContactController"})}]),angular.module("contactsApp",[]).constant("CONTACTS_CONSTANTS",{api_url:"/api/contacts",templates:{contactsIndexTemplate:"mean-app/contacts-app/contacts-app-index.html",contactsHeaderTemplate:"mean-app/contacts-app/contacts-app-header.html",contactListTemplate:"mean-app/contacts-app/contact-list.html",contactFormTemplate:"mean-app/contacts-app/contact-form.html",contactInfoTemplate:"mean-app/contacts-app/contact-info.html"},imgUrl:{contactLogo:"images/contacts-app-brand.jpg"}}).service("ContactsService",["$http",function(e){this.getContacts=function(){return e.get("/api/contacts").then(function(e){return e})},this.createContact=function(t){return e.post("/api/contacts",t).then(function(e){return e})},this.getContact=function(t){return e.get("/api/contacts/"+t).then(function(e){return e})},this.editContact=function(t){return e.put(url,"/api/contacts/"+t._id).then(function(e){return e})},this.deleteContact=function(t){return e["delete"]("/api/contacts/"+t).then(function(e){return e})}}]).controller("ContactsListController",["resolvedContacts","$scope",function(e,t){t.contacts=e.data}]).controller("NewContactController",["$scope","$state","ContactsService",function(e,t,a){e.back=function(){t.go("contacts.list")},e.saveContact=function(e){a.createContact(e).then(function(e){t.go("contacts.edit",{id:e.data._id})},function(e){alert(e)})}}]).controller("EditContactController",["$scope","$stateParams","ContactsService",function(e,t,a){a.getContact(t.id).then(function(t){e.contact=t.data},function(e){alert(e)}),e.toggleEdit=function(){e.editMode=!0,e.contactFormUrl="mean-app/contacts-app/contact-form.html"},e.back=function(){e.editMode=!1,e.contactFormUrl=""},e.saveContact=function(t){a.editContact(t),e.editMode=!1,e.contactFormUrl=""},e.deleteContact=function(e){a.deleteContact(e)}}])}(),function(){angular.module("meanApp").service("authentication",["$http","$window",function(e,t){var a=function(e){t.localStorage["mean-app-token"]=e},n=function(){return t.localStorage["mean-app-token"]},o=function(){var e=n();if(e){JSON.parse(t.atob(e.split(".")[1]));return!0}return!1},l=function(){if(o()){var e=n(),a=JSON.parse(t.atob(e.split(".")[1]));return{email:a.email,name:a.name}}},i=function(t){return e.post("/api/register",t).success(function(e){a(e.token)})},r=function(t){return e.post("/api/login",t).success(function(e){a(e.token)})},s=function(){t.localStorage.removeItem("mean-app-token")};return{currentUser:l,saveToken:a,getToken:n,isLoggedIn:o,register:i,login:r,logout:s}}])}(),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/contacts-app/contact-info.html",'<div class="row"><div class="col-md-6"><h2>{{ contact.firstName }} {{ contact.lastName }}</h2></div><div class="col-md-3"></div><div class="col-md-2"><a ui-sref="contacts.list"><button style="margin-top:20px" class="btn btn-default" ng-click="deleteContact(contact._id)">Delete</button></a></div><div class="col-md-1"></div></div><div ng-hide="editMode" class="container"><div><p ng-if="contact.email">email: <a ng-href="mailto:{{ contact.email }}" target="_blank">{{ contact.email }}</a></p><p ng-if="contact.phone.mobile">phone (m): {{ contact.phone.mobile }}</p><p ng-if="contact.phone.work">phone (w): {{ contact.phone.work }}</p><p ng-if="contact.address">address: {{ contact.address }}</p><p ng-if="contact.twitter">twitter: <a ng-href="https://twitter.com/{{ contact.twitter }}" target="_blank">@{{ contact.twitter }}</a></p><p><button style="margin-top:20px" class="btn btn-default" ng-click="toggleEdit()">Edit</button> <a style="margin-top:20px" class="btn btn-default" ui-sref="contacts.list">Back</a></p></div></div><div ng-include="contactFormUrl"></div>')}]),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/contacts-app/contact-form.html",'<div class="row" ng-hide="contact._id"><div class="col-md-6"><h2>Create new contact</h2></div></div><div class="container"><div><p><label for="fname">First Name (required)</label><input id="fname" class="form-control" type="text" ng-model="contact.firstName" required></p><p><label for="lname">Last Name (required)</label><input id="lname" class="form-control" type="text" ng-model="contact.lastName" required></p><p><label for="email">Email (required)</label><input id="email" class="form-control" type="text" ng-model="contact.email" required></p><p><label for="ph-mob">Phone (Mobile)</label><input id="ph-mob" class="form-control" type="text" ng-model="contact.phone.mobile"></p><p><label for="ph-work">Phone (Work)</label><input id="ph-work" class="form-control" type="text" ng-model="contact.phone.work"></p><p><label for="address">Address</label><input id="address" class="form-control" type="text" ng-model="contact.address"></p><p><label for="twit-url">Twitter Handle</label><input id="twit-url" class="form-control" type="text" ng-model="contact.twitter"></p><p><button style="margin-top:20px" class="btn btn-default" ng-click="saveContact(contact)">Save</button> <button style="margin-top:20px" class="btn btn-default" ng-click="back()">Back</button></p></div></div>')}]),angular.module("meanApp").run(["$templateCache",function(e){e.put("mean-app/common/landing-page.view.html",'<nav class="navbar navbar-inverse navbar-static-top"><div class="container"><div class="navbar-header"><button type="button" class="navbar-toggle" ng-click="nvCollapsed = !nvCollapsed"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button> <a class="navbar-brand" href="">Brand</a></div><div class="collapse navbar-collapse" uib-collapse="!nvCollapsed"><ul class="nav navbar-nav"><li class="active"><a ui-sref="contacts">Contacts MEAN App</a></li><li><a ui-sref="flapper">Flapper News App</a></li><li><a ui-sref="loc8r">Loc8r</a></li><li><a href="/react-index.html">React App</a></li></ul></div></div></nav>')}]);
//# sourceMappingURL=data:application/json;base64,
